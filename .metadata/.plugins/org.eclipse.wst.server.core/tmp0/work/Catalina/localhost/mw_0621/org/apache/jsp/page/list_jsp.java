/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.1
 * Generated at: 2022-06-21 05:07:56 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.page;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;

public final class list_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write(" \r\n");
      out.write(" \t<style>\r\n");
      out.write(" \ttable {\r\n");
      out.write(" \t\tborder: 1px solid ;\r\n");
      out.write("        border-collapse: collapse;\r\n");
      out.write(" \t}\r\n");
      out.write(" \t th, td {\r\n");
      out.write("        border-bottom: 1px solid #444444;\r\n");
      out.write("      }\r\n");
      out.write("     \r\n");
      out.write("      #aa {\r\n");
      out.write("      background : #D6FFFF; \r\n");
      out.write("      }\r\n");
      out.write("      a {\r\n");
      out.write("      \tcolor : black;\r\n");
      out.write("      \ttext-decoration:none;\r\n");
      out.write("      }\r\n");
      out.write("      a:hover {\r\n");
      out.write("      \ttext-decoration:underline;\r\n");
      out.write("      }\r\n");
      out.write("      #tt {\r\n");
      out.write("      background:#BDBDBD;\r\n");
      out.write("      }\r\n");
      out.write("      \r\n");
      out.write(" \t</style>\r\n");
      out.write(" \t<script>\r\n");
      out.write(" \t\r\n");
      out.write(" \t\tfunction ch()\r\n");
      out.write(" \t\t{\r\n");
      out.write(" \t\t\tvar chk=0;\r\n");
      out.write("\t\t\tfor(i=0;i<4;i++)\r\n");
      out.write("\t\t\t\t{\r\n");
      out.write("\t\t\t\tif(document.ch.pay[i].checked) // 참이 발생되면 chk값은 1\r\n");
      out.write("\t\t\t\t\t{\r\n");
      out.write("\t\t\t\t\t\tchk=1;\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write(" \t\t}\r\n");
      out.write(" \t\tfunction view(i)\r\n");
      out.write(" \t\t{\r\n");
      out.write(" \t\t\tlocation=\"list.jsp?pager=\"+i;\r\n");
      out.write(" \t\t\t\r\n");
      out.write(" \t\t\tdocument.getElementById(\"bb\"+i).style.background=\"blue\";\r\n");
      out.write(" \t\t\t\r\n");
      out.write(" \t\t}\r\n");
      out.write(" \t\r\n");
      out.write(" \t</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\t<!-- list.jsp -->\r\n");
      out.write("\r\n");
      out.write("\t");

	Class.forName("com.mysql.jdbc.Driver");
	String db = "jdbc:mysql://localhost:3306/first";
	Connection conn = DriverManager.getConnection(db, "root", "1234");
	
	// request => 사용자가 원하는 페이지값
	int pager;
	if(request.getParameter("pager") == null){
		pager=1;
	}
	else if(request.getParameter("pager").equals("0")){
		pager=1;
	}
	else
	{
		pager = Integer.parseInt(request.getParameter("pager"));	
	}
	
	
	// 사용자가 원하는 페이지의 index값 만들기
	int index=(pager-1)*10;
	
	String sql="select * from board1 order by id desc limit ?,10";
	
	PreparedStatement pstmt = conn.prepareStatement(sql);
	pstmt.setInt(1,index);
	
	ResultSet rs = pstmt.executeQuery();
	
	
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("\t<table width=\"900\" border=\"2\" align=\"center\" >\r\n");
      out.write("\t<tr>\r\n");
      out.write("\t\r\n");
      out.write("\t<td id=\"aa\"> 제목</td>\r\n");
      out.write("\t<td id=\"aa\"> 작성자</td>\r\n");
      out.write("\t<td id=\"aa\"> 조회수</td>\r\n");
      out.write("\t<td id=\"aa\"> 작성일</td>\r\n");
      out.write("\t</tr>\r\n");
      out.write("\t");

	while(rs.next()) { 
	
      out.write("\r\n");
      out.write("\t<tr>\r\n");
      out.write("\t\r\n");
      out.write("\t<td><a href=\"readnum.jsp?id=");
      out.print(rs.getString("id"));
      out.write('"');
      out.write('>');
      out.print(rs.getString("title") );
      out.write(" </a></td>\r\n");
      out.write("\t<td>");
      out.print(rs.getString("name") );
      out.write("</td>\t\r\n");
      out.write("\t<td>");
      out.print(rs.getString("readnum") );
      out.write("\r\n");
      out.write("\t<td>");
      out.print(rs.getString("writeday") );
      out.write("\r\n");
      out.write("\t</tr>\r\n");
      out.write("\t");

	} 
	
      out.write("\r\n");
      out.write("\t<tr>\r\n");
      out.write("\t<td align=\"right\" colspan=\"4\"> <form method=\"post\" action=\"write.jsp\"> <input type=\"submit\" value=\"글쓰기\" ></form></td>\r\n");
      out.write("\t</tr>\r\n");
      out.write("\t<tr>\r\n");
      out.write("\t<td colspan=\"4\" align=\"center\">\r\n");
      out.write("\t\t<!-- 페이징 출력(사용자를 위한 링크) -->\r\n");
      out.write("\t\t");

			// pstart 와 pend를 구하기
			int num=pager/10;
			if(pager%10 == 0)
			{
				num=num-1; // num--;
			}
			int pstart=num*10+1;
			int pend=pstart+9;	// 마지막 그룹에서는 pend값을 총페이지를 계산하여 처리가 필요
							 	// 마지막 그룹에서는 pend값을 총페이지값으로 변경
			// 총페이지를 구하기
			sql = "select ceil(count(*)/10) as chong from board1";
			pstmt = conn.prepareStatement(sql);
			rs = pstmt.executeQuery();
			rs.next();
			int chong = rs.getInt("chong");
			if(pend > chong)
			{
				pend=chong;
			} 
		
      out.write("\r\n");
      out.write("\t\t<!-- 이전페이지로 이동 (1,10) -->\r\n");
      out.write("\t\t<!-- 이전 10페이지 이동 (이전 그룹) : 첫그룹에서는 링크 X-->\r\n");
      out.write("\t\t");
if(pager!=0 & pager > 1 ){ 
      out.write("\r\n");
      out.write("\t\t<input type=\"button\" onclick=\"location='list.jsp?pager=1'\" value=\"처음\">\r\n");
      out.write("\t\t");
 } 
      out.write("\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t");
 if(pstart == 1){ 
      out.write("\r\n");
      out.write("\t\t<!-- <button onclick=\"a()\">처음</button>\r\n");
      out.write("\t\t<button onclick=\"a()\">←←</button> -->\r\n");
      out.write("\t\t");

		}
		else
		{
      out.write("\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<input type=\"button\" onclick=\"location='list.jsp?pager=");
      out.print(pstart-1 );
      out.write("'\" value=\"←←\">\r\n");
      out.write("\t\t");
      out.write("\r\n");
      out.write("\t\t");
} 
      out.write("\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<!-- 이전 1페이지 이동 : 현재페이지가 1페이지이면 링크 X -->\r\n");
      out.write("\t\t");
 if(pager==1) { 
      out.write("\r\n");
      out.write("\t\t<!-- <button onclick=\"a()\">←</button> -->\r\n");
      out.write("\t\t");
}
		else
		{
		
      out.write("\r\n");
      out.write("\t\t<input type=\"button\" onclick=\"location='list.jsp?pager=");
      out.print(pager-1);
      out.write("'\" value=\"←\">\r\n");
      out.write("\t\t");
 } 
      out.write("\r\n");
      out.write("\t\t");
      out.write("\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t");
 	String str="";
			
			for(int i=pstart;i<=pend;i++) { 
			if(pager==i)
			{
				str="style='background:#B2EBF4;'";
			}
			else{
				str="";
			}
		
      out.write("\r\n");
      out.write("\t\t<button id=\"tt\" ");
      out.print(str );
      out.write("  onclick=\"location='list.jsp?pager=");
      out.print(i );
      out.write('\'');
      out.write('"');
      out.write('>');
      out.print(i );
      out.write("</button>\r\n");
      out.write("\t\t");
      out.write("\r\n");
      out.write("\t\t");
      out.write("\r\n");
      out.write("\t\t");
      out.write("\r\n");
      out.write("\t\t");
 } 
      out.write("\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<!-- 다음 1페이지 이동 -->\r\n");
      out.write("\t\t");
      out.write("\r\n");
      out.write("\t\t ");
if(pager==pend) { 
      out.write("\r\n");
      out.write("\t\t<!-- <button onclick=\"b()\">→</button> -->\r\n");
      out.write("\t\t");
 }
		else{
      out.write("\t\r\n");
      out.write("\t\t<input type=\"button\" onclick=\"location='list.jsp?pager=");
      out.print(pager+1 );
      out.write("'\" value=\"→\">\r\n");
      out.write("\t\t");
} 
      out.write("\r\n");
      out.write("\t\t<!-- 다음페이지로 이동 (1,10) -->\r\n");
      out.write("\t\t");
if(pend==chong){ 
      out.write("\r\n");
      out.write("\t\t <!-- <button onclick=\"b()\">→→</button>\r\n");
      out.write("\t\t<button onclick=\"b()\">마지막</button>  -->\r\n");
      out.write("\t\t");
 }
		else{
      out.write("\r\n");
      out.write("\t\t<input type=\"button\" onclick=\"location='list.jsp?pager=");
      out.print(pend+1 );
      out.write("'\" value=\"→→\">\r\n");
      out.write("\t\t \r\n");
      out.write("\t\t ");
 } 
      out.write(" \r\n");
      out.write("\t\t ");
 if(pager < chong){ 
      out.write("\r\n");
      out.write("\t\t <input type=\"button\" onclick=\"location='list.jsp?pager=");
      out.print(chong );
      out.write("'\" value=\"마지막\">\r\n");
      out.write("\t\t ");
}
		 else if(pend == chong) {
		 
      out.write("\r\n");
      out.write("\t\t \r\n");
      out.write("\t\t ");
 } 
      out.write("\r\n");
      out.write("\t</td>\r\n");
      out.write("\t</tr>\r\n");
      out.write("\t</table>\r\n");
      out.write("\t\r\n");
      out.write("\t<script>\r\n");
      out.write("\t\tfunction a(){\r\n");
      out.write("\t\t\talert(\"첫페이지입니다\");\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tfunction b(){\r\n");
      out.write("\t\t\talert(\"마지막페이지입니다\");\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t</script>\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("<!-- \t<form name=\"pkc\" method=\"post\" action=\"pager.jsp\">\r\n");
      out.write("\t<input type=\"hidden\" name=\"pager\" >\t\r\n");
      out.write("\t<input type=\"submit\" name=\"submit\" onclick=\"view(1)\" value=\"1\">\t\r\n");
      out.write("\t<input type=\"submit\" name=\"submit\" onclick=\"view(2)\" value=\"2\">\t\r\n");
      out.write("\t<input type=\"submit\" name=\"submit\" onclick=\"view(3)\" value=\"3\">\t\r\n");
      out.write("\t</form>\r\n");
      out.write("\t\r\n");
      out.write("\t<script>\r\n");
      out.write("\t\tfunction view(n)\r\n");
      out.write("\t\t{\r\n");
      out.write("\t\t\tif(n==1){\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tdocument.pkc.pager.value=1;\r\n");
      out.write("\t\t\t}\t\t\t\t\r\n");
      out.write("\t\t\telse if (n==2){\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\tdocument.pkc.pager.value=2;\r\n");
      out.write("\t\t\t}\t\t\t\r\n");
      out.write("\t\t\telse{\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tdocument.pkc.pager.value=3;\r\n");
      out.write("\t\t\t}\t\t\t\r\n");
      out.write("\t\t}\r\n");
      out.write("\t</script> -->\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
