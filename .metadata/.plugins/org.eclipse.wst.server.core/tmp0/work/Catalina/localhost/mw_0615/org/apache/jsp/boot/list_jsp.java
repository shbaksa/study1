/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.1
 * Generated at: 2022-06-15 04:42:27 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.boot;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;

public final class list_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("    \r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("  <head>\r\n");
      out.write("    <meta charset=\"utf-8\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("    <title>게시판</title>\r\n");
      out.write("   <style>\r\n");
      out.write("   #aa {\r\n");
      out.write("   \tposition : absolute;\r\n");
      out.write("   \tvisibility : hidden;\r\n");
      out.write("   \tbackground : black;\r\n");
      out.write("   \tborder : 2px soild black;\r\n");
      out.write("   \tcolor : white;\r\n");
      out.write("   }\r\n");
      out.write("   </style>\r\n");
      out.write("    <script>\r\n");
      out.write("    \r\n");
      out.write("\tfunction view(id) {\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tdocument.getElementById(\"aa\").style.visibility=\"visible\";\r\n");
      out.write("\t\tdocument.getElementById(\"aa\").style.left=(event.pageX+10)+\"px\";\r\n");
      out.write("\t\tdocument.getElementById(\"aa\").style.top=event.pageY+\"px\";\r\n");
      out.write("\t\tdocument.pkc.id.value=id; // 매개변수를 폼태그에 전달\r\n");
      out.write("\t\t}\r\n");
      out.write("</script>\r\n");
      out.write("    <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.0-beta1/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-0evHe/X+R7YkIZDRvuzKMRqM+OrBnVFBL6DOitfPri4tjfHxaWutUpFmBp4vmVor\" crossorigin=\"anonymous\">\r\n");
      out.write("  </head>\r\n");
      out.write("  <body>\r\n");
      out.write("  ");

	Class.forName("com.mysql.jdbc.Driver");
	String db = "jdbc:mysql://localhost:3306/first";
	Connection conn = DriverManager.getConnection(db, "root", "1234"); 
	
	String sql ="select * from board2";
	
	PreparedStatement pstmt = conn.prepareStatement(sql);
	
	ResultSet rs = pstmt.executeQuery();
	
	
      out.write("\r\n");
      out.write("\t<form name=\"pkc\" id=\"aa\" method=\"post\" action=\"bimil_check.jsp\">\r\n");
      out.write("\t<input type=\"hidden\" name=\"id\">\r\n");
      out.write("\t 비밀번호  <input type=\"password\" name=\"pwd\" size=\"4\">\r\n");
      out.write("\t<input type=\"submit\" value=\"확인\">\r\n");
      out.write("\t</form>\r\n");
      out.write("\t\r\n");
      out.write("  <div> <h1 class=\"p-3 mb-2 bg-light text-dark\" align=\"center\"> 게시판 목록 </h1></div>\r\n");
      out.write("  <table class=\"table table-bordered table-striped\" >\r\n");
      out.write("  <thead align=\"center\">\r\n");
      out.write("    <tr>\r\n");
      out.write("      <th scope=\"col\" >제목</th>\r\n");
      out.write("      <th scope=\"col\">작성자</th>\r\n");
      out.write("      <th scope=\"col\">조회수</th>\r\n");
      out.write("      <th scope=\"col\">작성날짜</th>\r\n");
      out.write("      <th scope=\"col\">지역</th>\r\n");
      out.write("      <th scope=\"col\">공개여부</th>\r\n");
      out.write("    </tr>\r\n");
      out.write("  </thead>\r\n");
      out.write("  <tbody>\r\n");
      out.write("  ");
 while(rs.next()) {
      out.write("\r\n");
      out.write("    <tr>\r\n");
      out.write("    ");
if(rs.getInt("bimil") == 0) 
	{ 
      out.write("\t\r\n");
      out.write("\t<td ><a href=\"readnum.jsp?id=");
      out.print(rs.getInt("id"));
      out.write('"');
      out.write('>');
      out.write(' ');
      out.print(rs.getString("title") );
      out.write(" </a>  </td>\r\n");
      out.write("\t");

	}
	else { 
	
      out.write("\t\r\n");
      out.write("    <td > <span onclick=\"view(");
      out.print(rs.getInt("id"));
      out.write(')');
      out.write('"');
      out.write('>');
      out.print(rs.getString("title") );
      out.write("</span> </td> <!-- 클릭하면 비밀번호 입력창이 나오게 -->\r\n");
      out.write("\t\t\t\t\t\t\t\t<!-- id값을 위의 폼태그의 id에 준다 -->\r\n");
      out.write("\t");

	}
	
      out.write("\r\n");
      out.write("    <td> ");
      out.print(rs.getString("name") );
      out.write("</td>\r\n");
      out.write("\t<td> ");
      out.print(rs.getString("readnum") );
      out.write("</td>\r\n");
      out.write("\t<td > ");
      out.print(rs.getString("writeday") );
      out.write(" </td>\t\r\n");
      out.write("\t");

	String area;
	switch(rs.getInt("area")) { 
	case 0 : area="서울"; break; 
	case 1 : area="경기"; break;
	case 2 : area="강원"; break;
	case 3 : area="충청"; break;
	case 4 : area="전라"; break;	
	case 5 : area="경상"; break;	
	case 6 : area="제주"; break;	
	default : area="???";	
	} 
      out.write(" \r\n");
      out.write("\t<td> ");
      out.print(area );
      out.write("</td>\t\r\n");
      out.write("\t<td> ");
switch(rs.getInt("bimil")){
		case 0 :  
      out.write(" 공개글 ");
 break;
		case 1 :  
      out.write(" 비밀글 ");
 break;
		
		}
      out.write(" </td>\r\n");
      out.write("\t</tr>\r\n");
      out.write("  ");
 } 
      out.write("\r\n");
      out.write("  </tbody>\r\n");
      out.write("  <tfoot>\r\n");
      out.write("  <td colspan=\"6\" align=\"center\"><input class=\"btn btn-outline-dark\" type=\"submit\" value=\"글쓰기\"></td>\r\n");
      out.write("  </tfoot>\r\n");
      out.write("</table>\r\n");
      out.write("    <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.0-beta1/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-pprn3073KE6tl6bjs2QrFaJGz5/SUsLqktiwsUTF55Jfv3qYSDhgCecCxMW52nD2\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("  </body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
