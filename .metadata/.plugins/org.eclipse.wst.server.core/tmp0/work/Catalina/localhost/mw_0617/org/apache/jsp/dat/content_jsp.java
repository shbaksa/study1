/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.1
 * Generated at: 2022-06-17 00:32:31 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.dat;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;

public final class content_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');

   //out.print(request.getHeader("referer"));
   if(request.getHeader("referer")==null)
   {
	   response.sendRedirect("list.jsp");
   }

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<script>\r\n");
      out.write("   function view()\r\n");
      out.write("   {\r\n");
      out.write("\t   document.getElementById(\"del\").style.display=\"table-row\";\r\n");
      out.write("   }\r\n");
      out.write("  </script>\r\n");
      out.write("  <style>\r\n");
      out.write("    #del {\r\n");
      out.write("      display:none;\r\n");
      out.write("    }\r\n");
      out.write("  </style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");

    // DB연결
    Class.forName("com.mysql.jdbc.Driver");
    String db="jdbc:mysql://localhost:3306/first";
    Connection conn=DriverManager.getConnection(db,"root","1234");
    
    // request
    String id=request.getParameter("id"); // board2테이블의 id값
    
    // 쿼리 생성
    String sql="select * from board2 where id=?";
    
    // 심부름꾼 생성
    PreparedStatement pstmt=conn.prepareStatement(sql);
    pstmt.setString(1, id);
    
    // 쿼리 실행 => ResultSet
    ResultSet rs=pstmt.executeQuery();
    rs.next();

      out.write("    \r\n");
      out.write("  <table width=\"500\" border=\"1\" align=\"center\">\r\n");
      out.write("    <tr>\r\n");
      out.write("      <td> 제 목 </td>\r\n");
      out.write("      <td> ");
      out.print(rs.getString("title"));
      out.write(" </td>\r\n");
      out.write("    </tr>\r\n");
      out.write("    <tr>\r\n");
      out.write("      <td> 이 름 </td>\r\n");
      out.write("      <td> ");
      out.print(rs.getString("name"));
      out.write(" </td>\r\n");
      out.write("    </tr>\r\n");
      out.write("    <tr>\r\n");
      out.write("      <td> 내 용 </td>\r\n");
      out.write("      <td> ");
      out.print(rs.getString("content").replace("\r\n","<br>"));
      out.write(" </td>\r\n");
      out.write("    </tr>\r\n");
      out.write("    <tr>\r\n");
      out.write("      <td> 조회수 </td>\r\n");
      out.write("      <td> ");
      out.print(rs.getString("readnum"));
      out.write(" </td>\r\n");
      out.write("    </tr>\r\n");
      out.write("    <tr>\r\n");
      out.write("      <td> 작성일 </td>\r\n");
      out.write("      <td> ");
      out.print(rs.getString("writeday"));
      out.write(" </td>\r\n");
      out.write("    </tr>\r\n");
      out.write("    ");

        String area;
        switch(rs.getInt("area"))  // 0~4
        {
            case 0: area="서울"; break;
            case 1: area="경기"; break;
            case 2: area="강원"; break;
            case 3: area="충청"; break;
            case 4: area="전라"; break;
            default: area="???";
        }
    
      out.write("\r\n");
      out.write("    <tr>\r\n");
      out.write("      <td> 지 역 </td>\r\n");
      out.write("      <td> ");
      out.print(area);
      out.write(" </td>\r\n");
      out.write("    </tr>\r\n");
      out.write("    <tr>\r\n");
      out.write("      <td colspan=\"2\" align=\"center\">\r\n");
      out.write("        <a href=\"update.jsp?id=");
      out.print(rs.getInt("id"));
      out.write("\"> 수정 </a>\r\n");
      out.write("        <a href=\"list.jsp\"> 목록 </a>\r\n");
      out.write("        <a href=\"javascript:view()\"> 삭제 </a>  <!-- 클릭시 입력폼을 나타나게 하기 -->\r\n");
      out.write("      </td>\r\n");
      out.write("    </tr>\r\n");
      out.write("    <tr id=\"del\">\r\n");
      out.write("      <td colspan=\"2\" align=\"center\">\r\n");
      out.write("         <form method=\"post\" action=\"delete.jsp\">\r\n");
      out.write("           <input type=\"hidden\" name=\"id\" value=\"");
      out.print(id);
      out.write("\">\r\n");
      out.write("           비밀번호 <input type=\"password\" name=\"pwd\">\r\n");
      out.write("           <input type=\"submit\" value=\"삭제\">\r\n");
      out.write("         </form>\r\n");
      out.write("      </td>\r\n");
      out.write("    </tr> \r\n");
      out.write("  </table> \r\n");
      out.write("  <hr>\r\n");
      out.write("  <!-- 댓글관련 -->\r\n");
      out.write("  <table width=\"500\" border=\"0\" align=\"center\">\r\n");
      out.write("    <tr>\r\n");
      out.write("     <form method=\"post\" action=\"dat_write_ok.jsp\">\r\n");
      out.write("      <input type=\"hidden\" name=\"bid\" value=\"");
      out.print(id);
      out.write("\"> <!-- 댓글을 달 board2 글의 id -->\r\n");
      out.write("      <td> <input type=\"text\" name=\"name\" size=\"4\" placeholder=\"이 름\"> </td>\r\n");
      out.write("      <td> <textarea cols=\"30\" rows=\"2\" name=\"content\" placeholder=\"댓글을 달아 주세요\"></textarea> </td>\r\n");
      out.write("      <td> <input type=\"password\" name=\"pwd\" size=\"4\" placeholder=\"비밀번호\"> </td>\r\n");
      out.write("      <td> <input type=\"submit\" value=\"댓글달기\"> </td>\r\n");
      out.write("     </form>\r\n");
      out.write("    </tr>\r\n");
      out.write("   \r\n");
      out.write("   ");

    // dat테이블의 내용을 가져오기
    // 쿼리 생성
    sql="select * from dat where bid=?"; // content에서의 id값을 ?에 전달
    pstmt=conn.prepareStatement(sql);
    pstmt.setString(1,id);
    rs=pstmt.executeQuery();
    
    while(rs.next())  // 댓글 리스트 출력
    {
   
      out.write(" <!-- 이름을 클릭하면 수정메뉴,  날짜를 클릭하면 삭제로 이동 -->\r\n");
      out.write("    <tr> <!-- dat테이블의 내용을 출력 -->\r\n");
      out.write("      <td onclick=\"upform_view(");
      out.print(rs.getInt("id"));
      out.write(',');
      out.write('\'');
      out.print(rs.getString("name"));
      out.write('\'');
      out.write(',');
      out.write('\'');
      out.print(rs.getString("content"));
      out.write("')\"> ");
      out.print(rs.getString("name"));
      out.write(" </td>\r\n");
      out.write("      <td colspan=\"2\"> ");
      out.print(rs.getString("content"));
      out.write(" </td>\r\n");
      out.write("      <td onclick=\"dat_view(");
      out.print(rs.getInt("id"));
      out.write(")\"> ");
      out.print(rs.getString("writeday"));
      out.write(" </td> <!-- 날짜를 클릭하면 삭제폼이 보이게 -->\r\n");
      out.write("    </tr>    <!-- 숨겨진 삭제폼을 보이게 -->\r\n");
      out.write("   ");

    }
   
      out.write(" \r\n");
      out.write("  </table>\r\n");
      out.write("   <!-- 수정을 위한 레이어 폼 -->\r\n");
      out.write("   <!-- \r\n");
      out.write("     1. 문서를 읽을때 숨겨야 된다..\r\n");
      out.write("     2. 이름을 클릭하면 나타나야 된다..\r\n");
      out.write("    -->\r\n");
      out.write("   <form name=\"upform\" id=\"upform\"  method=\"post\" action=\"dat_update_ok.jsp\">\r\n");
      out.write("    <input type=\"hidden\" name=\"id\">\r\n");
      out.write("    <input type=\"hidden\" name=\"bid\" value=\"");
      out.print(id);
      out.write("\">\r\n");
      out.write("   <table width=\"500\" border=\"0\" align=\"center\">\r\n");
      out.write("    <tr>\r\n");
      out.write("      <td> <input type=\"text\" name=\"name\" size=\"4\" placeholder=\"이 름\"> </td>\r\n");
      out.write("      <td> <textarea cols=\"30\" rows=\"2\" name=\"content\" placeholder=\"댓글을 달아 주세요\"></textarea> </td>\r\n");
      out.write("      <td> <input type=\"password\" name=\"pwd\" size=\"4\" placeholder=\"비밀번호\"> </td>\r\n");
      out.write("      <td> <input type=\"submit\" value=\"댓글수정\"> </td>\r\n");
      out.write("    </tr>\r\n");
      out.write("   </table>\r\n");
      out.write("   </form>\r\n");
      out.write("  <style>\r\n");
      out.write("     #upform {\r\n");
      out.write("       visibility:hidden;\r\n");
      out.write("     }\r\n");
      out.write("  </style>\r\n");
      out.write("  <script>\r\n");
      out.write("    function upform_view(id,name,content) // id가 upform인 요소를 보이게 한다..\r\n");
      out.write("    {   // 매개변수로 넘어온 값을 폼의 input태그에 전달\r\n");
      out.write("    \tdocument.upform.id.value=id;\r\n");
      out.write("        document.upform.name.value=name;\r\n");
      out.write("        document.upform.content.value=content;\r\n");
      out.write("    \t// 폼을 보이게 하기\r\n");
      out.write("    \tdocument.getElementById(\"upform\").style.visibility=\"visible\";\r\n");
      out.write("    }\r\n");
      out.write("  </script>\r\n");
      out.write("  \r\n");
      out.write("   <!-- 댓글을 삭제 : 쿼리실행전에 비밀번호체크, delete from dat where id=? -->\r\n");
      out.write("   <!-- 댓글 삭제를 위한 폼 -->\r\n");
      out.write("   <form name=\"pkc\" id=\"dat_del\" method=\"post\" action=\"dat_delete.jsp\">\r\n");
      out.write("     <input type=\"hidden\" name=\"id\">\r\n");
      out.write("     <!-- board2테이블의 id추가 -->\r\n");
      out.write("     <input type=\"hidden\" name=\"bid\" value=\"");
      out.print(id);
      out.write("\">\r\n");
      out.write("     <input type=\"password\" name=\"pwd\" placeholder=\"비밀번호\" size=\"5\">\r\n");
      out.write("     <input type=\"submit\" value=\"댓글삭제\">\r\n");
      out.write("   </form>\r\n");
      out.write("   <script>\r\n");
      out.write("         \r\n");
      out.write("    \t\t \r\n");
      out.write("     function dat_view(id)\r\n");
      out.write("     {\r\n");
      out.write("    \t document.getElementById(\"dat_del\").style.visibility=\"visible\";\r\n");
      out.write("    \t document.pkc.id.value=id;\r\n");
      out.write("    \t // 삭제폼을 현재 마우스가 클릭된 위치로 가져오기  event.pageX, event.pageY\r\n");
      out.write("    \t document.getElementById(\"dat_del\").style.left=(event.pageX+20)+\"px\";\r\n");
      out.write("    \t document.getElementById(\"dat_del\").style.top=event.pageY+\"px\";\r\n");
      out.write("     }\r\n");
      out.write("   </script>\r\n");
      out.write("   <style>\r\n");
      out.write("     #dat_del {\r\n");
      out.write("       visibility:hidden;  /* visible */\r\n");
      out.write("       position:absolute;\r\n");
      out.write("       border:1px solid red;\r\n");
      out.write("       background:white;\r\n");
      out.write("     }\r\n");
      out.write("   </style>\r\n");
    
    // close()
    pstmt.close();
    conn.close();

      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
